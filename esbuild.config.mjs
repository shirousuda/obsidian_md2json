import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import path from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

// プラグインフォルダのパスを設定
const pluginFolder = path.join("C:", "Users", "shchm", "iCloudDrive", "iCloud~md~obsidian", "shiro", ".obsidian", "plugins", "obsidian-md2json");

const context = await esbuild.context({
  banner: {
    js: banner,
  },
  entryPoints: ["main.ts"],
  bundle: true,
  external: [
    "obsidian",
    "electron",
    "@codemirror/autocomplete",
    "@codemirror/collab",
    "@codemirror/commands",
    "@codemirror/language",
    "@codemirror/lint",
    "@codemirror/search",
    "@codemirror/state",
    "@codemirror/view",
    "@lezer/common",
    "@lezer/highlight",
    "@lezer/lr",
    ...builtins],
  format: "cjs",
  target: "es2018",
  logLevel: "info",
  sourcemap: prod ? false : "inline",
  treeShaking: true,
  outfile: path.join(pluginFolder, "main.js"),
  define: {
    'process.env.NODE_ENV': '"production"',
    'global': 'window',
    'window.h': 'window.h',
    'window.render': 'window.render',
    'window.Component': 'window.Component',
    'window.createEl': 'window.createEl'
  },
  loader: {
    '.ts': 'ts'
  }
});

if (prod) {
  await context.rebuild();
  process.exit(0);
} else {
  await context.watch();
} 